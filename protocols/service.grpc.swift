//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: protocols/service.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Config
///
/// Usage: instantiate `Protocols_ManagementClient`, then call methods of this protocol to make API calls.
internal protocol Protocols_ManagementClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Protocols_ManagementClientInterceptorFactoryProtocol? { get }

  func getConfig(
    _ request: Protocols_GetConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_GetConfigRequest, Protocols_GetConfigResponse>

  func setConfig(
    _ request: Protocols_SetConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_SetConfigRequest, Protocols_SetConfigResponse>

  func backup(
    _ request: Protocols_BackupRequest,
    callOptions: CallOptions?,
    handler: @escaping (Protocols_BackupResponse) -> Void
  ) -> ServerStreamingCall<Protocols_BackupRequest, Protocols_BackupResponse>

  func backupFiles(
    callOptions: CallOptions?,
    handler: @escaping (Protocols_BackupFilesResponse) -> Void
  ) -> BidirectionalStreamingCall<Protocols_BackupFilesRequest, Protocols_BackupFilesResponse>

  func fileSystem(
    callOptions: CallOptions?,
    handler: @escaping (Protocols_FileSystemResponse) -> Void
  ) -> BidirectionalStreamingCall<Protocols_FileSystemRequest, Protocols_FileSystemResponse>

  func restart(
    _ request: Protocols_RestartRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_RestartRequest, Protocols_RestartResponse>
}

extension Protocols_ManagementClientProtocol {
  internal var serviceName: String {
    return "protocols.Management"
  }

  /// Unary call to GetConfig
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getConfig(
    _ request: Protocols_GetConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_GetConfigRequest, Protocols_GetConfigResponse> {
    return self.makeUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.getConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigInterceptors() ?? []
    )
  }

  /// Unary call to SetConfig
  ///
  /// - Parameters:
  ///   - request: Request to send to SetConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setConfig(
    _ request: Protocols_SetConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_SetConfigRequest, Protocols_SetConfigResponse> {
    return self.makeUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.setConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigInterceptors() ?? []
    )
  }

  /// Server streaming call to Backup
  ///
  /// - Parameters:
  ///   - request: Request to send to Backup.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  internal func backup(
    _ request: Protocols_BackupRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Protocols_BackupResponse) -> Void
  ) -> ServerStreamingCall<Protocols_BackupRequest, Protocols_BackupResponse> {
    return self.makeServerStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.backup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBackupInterceptors() ?? [],
      handler: handler
    )
  }

  /// Bidirectional streaming call to BackupFiles
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func backupFiles(
    callOptions: CallOptions? = nil,
    handler: @escaping (Protocols_BackupFilesResponse) -> Void
  ) -> BidirectionalStreamingCall<Protocols_BackupFilesRequest, Protocols_BackupFilesResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.backupFiles.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBackupFilesInterceptors() ?? [],
      handler: handler
    )
  }

  /// Bidirectional streaming call to FileSystem
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func fileSystem(
    callOptions: CallOptions? = nil,
    handler: @escaping (Protocols_FileSystemResponse) -> Void
  ) -> BidirectionalStreamingCall<Protocols_FileSystemRequest, Protocols_FileSystemResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.fileSystem.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFileSystemInterceptors() ?? [],
      handler: handler
    )
  }

  /// Unary call to Restart
  ///
  /// - Parameters:
  ///   - request: Request to send to Restart.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func restart(
    _ request: Protocols_RestartRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_RestartRequest, Protocols_RestartResponse> {
    return self.makeUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.restart.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRestartInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Protocols_ManagementClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Protocols_ManagementNIOClient")
internal final class Protocols_ManagementClient: Protocols_ManagementClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Protocols_ManagementClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Protocols_ManagementClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the protocols.Management service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_ManagementClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Protocols_ManagementNIOClient: Protocols_ManagementClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Protocols_ManagementClientInterceptorFactoryProtocol?

  /// Creates a client for the protocols.Management service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_ManagementClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Config
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Protocols_ManagementAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Protocols_ManagementClientInterceptorFactoryProtocol? { get }

  func makeGetConfigCall(
    _ request: Protocols_GetConfigRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_GetConfigRequest, Protocols_GetConfigResponse>

  func makeSetConfigCall(
    _ request: Protocols_SetConfigRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_SetConfigRequest, Protocols_SetConfigResponse>

  func makeBackupCall(
    _ request: Protocols_BackupRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Protocols_BackupRequest, Protocols_BackupResponse>

  func makeBackupFilesCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Protocols_BackupFilesRequest, Protocols_BackupFilesResponse>

  func makeFileSystemCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Protocols_FileSystemRequest, Protocols_FileSystemResponse>

  func makeRestartCall(
    _ request: Protocols_RestartRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_RestartRequest, Protocols_RestartResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Protocols_ManagementAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Protocols_ManagementClientMetadata.serviceDescriptor
  }

  internal var interceptors: Protocols_ManagementClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeGetConfigCall(
    _ request: Protocols_GetConfigRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_GetConfigRequest, Protocols_GetConfigResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.getConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigInterceptors() ?? []
    )
  }

  internal func makeSetConfigCall(
    _ request: Protocols_SetConfigRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_SetConfigRequest, Protocols_SetConfigResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.setConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigInterceptors() ?? []
    )
  }

  internal func makeBackupCall(
    _ request: Protocols_BackupRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Protocols_BackupRequest, Protocols_BackupResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.backup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBackupInterceptors() ?? []
    )
  }

  internal func makeBackupFilesCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Protocols_BackupFilesRequest, Protocols_BackupFilesResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.backupFiles.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBackupFilesInterceptors() ?? []
    )
  }

  internal func makeFileSystemCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Protocols_FileSystemRequest, Protocols_FileSystemResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.fileSystem.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFileSystemInterceptors() ?? []
    )
  }

  internal func makeRestartCall(
    _ request: Protocols_RestartRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_RestartRequest, Protocols_RestartResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.restart.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRestartInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Protocols_ManagementAsyncClientProtocol {
  internal func getConfig(
    _ request: Protocols_GetConfigRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_GetConfigResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.getConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigInterceptors() ?? []
    )
  }

  internal func setConfig(
    _ request: Protocols_SetConfigRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_SetConfigResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.setConfig.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigInterceptors() ?? []
    )
  }

  internal func backup(
    _ request: Protocols_BackupRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Protocols_BackupResponse> {
    return self.performAsyncServerStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.backup.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBackupInterceptors() ?? []
    )
  }

  internal func backupFiles<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Protocols_BackupFilesResponse> where RequestStream: Sequence, RequestStream.Element == Protocols_BackupFilesRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.backupFiles.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBackupFilesInterceptors() ?? []
    )
  }

  internal func backupFiles<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Protocols_BackupFilesResponse> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Protocols_BackupFilesRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.backupFiles.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBackupFilesInterceptors() ?? []
    )
  }

  internal func fileSystem<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Protocols_FileSystemResponse> where RequestStream: Sequence, RequestStream.Element == Protocols_FileSystemRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.fileSystem.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFileSystemInterceptors() ?? []
    )
  }

  internal func fileSystem<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Protocols_FileSystemResponse> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Protocols_FileSystemRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Protocols_ManagementClientMetadata.Methods.fileSystem.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFileSystemInterceptors() ?? []
    )
  }

  internal func restart(
    _ request: Protocols_RestartRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_RestartResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_ManagementClientMetadata.Methods.restart.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRestartInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Protocols_ManagementAsyncClient: Protocols_ManagementAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Protocols_ManagementClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_ManagementClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Protocols_ManagementClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getConfig'.
  func makeGetConfigInterceptors() -> [ClientInterceptor<Protocols_GetConfigRequest, Protocols_GetConfigResponse>]

  /// - Returns: Interceptors to use when invoking 'setConfig'.
  func makeSetConfigInterceptors() -> [ClientInterceptor<Protocols_SetConfigRequest, Protocols_SetConfigResponse>]

  /// - Returns: Interceptors to use when invoking 'backup'.
  func makeBackupInterceptors() -> [ClientInterceptor<Protocols_BackupRequest, Protocols_BackupResponse>]

  /// - Returns: Interceptors to use when invoking 'backupFiles'.
  func makeBackupFilesInterceptors() -> [ClientInterceptor<Protocols_BackupFilesRequest, Protocols_BackupFilesResponse>]

  /// - Returns: Interceptors to use when invoking 'fileSystem'.
  func makeFileSystemInterceptors() -> [ClientInterceptor<Protocols_FileSystemRequest, Protocols_FileSystemResponse>]

  /// - Returns: Interceptors to use when invoking 'restart'.
  func makeRestartInterceptors() -> [ClientInterceptor<Protocols_RestartRequest, Protocols_RestartResponse>]
}

internal enum Protocols_ManagementClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Management",
    fullName: "protocols.Management",
    methods: [
      Protocols_ManagementClientMetadata.Methods.getConfig,
      Protocols_ManagementClientMetadata.Methods.setConfig,
      Protocols_ManagementClientMetadata.Methods.backup,
      Protocols_ManagementClientMetadata.Methods.backupFiles,
      Protocols_ManagementClientMetadata.Methods.fileSystem,
      Protocols_ManagementClientMetadata.Methods.restart,
    ]
  )

  internal enum Methods {
    internal static let getConfig = GRPCMethodDescriptor(
      name: "GetConfig",
      path: "/protocols.Management/GetConfig",
      type: GRPCCallType.unary
    )

    internal static let setConfig = GRPCMethodDescriptor(
      name: "SetConfig",
      path: "/protocols.Management/SetConfig",
      type: GRPCCallType.unary
    )

    internal static let backup = GRPCMethodDescriptor(
      name: "Backup",
      path: "/protocols.Management/Backup",
      type: GRPCCallType.serverStreaming
    )

    internal static let backupFiles = GRPCMethodDescriptor(
      name: "BackupFiles",
      path: "/protocols.Management/BackupFiles",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let fileSystem = GRPCMethodDescriptor(
      name: "FileSystem",
      path: "/protocols.Management/FileSystem",
      type: GRPCCallType.bidirectionalStreaming
    )

    internal static let restart = GRPCMethodDescriptor(
      name: "Restart",
      path: "/protocols.Management/Restart",
      type: GRPCCallType.unary
    )
  }
}

/// Usage: instantiate `Protocols_SearchClient`, then call methods of this protocol to make API calls.
internal protocol Protocols_SearchClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Protocols_SearchClientInterceptorFactoryProtocol? { get }

  func searchPosts(
    _ request: Protocols_SearchPostsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_SearchPostsRequest, Protocols_SearchPostsResponse>
}

extension Protocols_SearchClientProtocol {
  internal var serviceName: String {
    return "protocols.Search"
  }

  /// Unary call to SearchPosts
  ///
  /// - Parameters:
  ///   - request: Request to send to SearchPosts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func searchPosts(
    _ request: Protocols_SearchPostsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_SearchPostsRequest, Protocols_SearchPostsResponse> {
    return self.makeUnaryCall(
      path: Protocols_SearchClientMetadata.Methods.searchPosts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchPostsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Protocols_SearchClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Protocols_SearchNIOClient")
internal final class Protocols_SearchClient: Protocols_SearchClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Protocols_SearchClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Protocols_SearchClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the protocols.Search service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_SearchClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Protocols_SearchNIOClient: Protocols_SearchClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Protocols_SearchClientInterceptorFactoryProtocol?

  /// Creates a client for the protocols.Search service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_SearchClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Protocols_SearchAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Protocols_SearchClientInterceptorFactoryProtocol? { get }

  func makeSearchPostsCall(
    _ request: Protocols_SearchPostsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_SearchPostsRequest, Protocols_SearchPostsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Protocols_SearchAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Protocols_SearchClientMetadata.serviceDescriptor
  }

  internal var interceptors: Protocols_SearchClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeSearchPostsCall(
    _ request: Protocols_SearchPostsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_SearchPostsRequest, Protocols_SearchPostsResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_SearchClientMetadata.Methods.searchPosts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchPostsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Protocols_SearchAsyncClientProtocol {
  internal func searchPosts(
    _ request: Protocols_SearchPostsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_SearchPostsResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_SearchClientMetadata.Methods.searchPosts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchPostsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Protocols_SearchAsyncClient: Protocols_SearchAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Protocols_SearchClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_SearchClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Protocols_SearchClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'searchPosts'.
  func makeSearchPostsInterceptors() -> [ClientInterceptor<Protocols_SearchPostsRequest, Protocols_SearchPostsResponse>]
}

internal enum Protocols_SearchClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Search",
    fullName: "protocols.Search",
    methods: [
      Protocols_SearchClientMetadata.Methods.searchPosts,
    ]
  )

  internal enum Methods {
    internal static let searchPosts = GRPCMethodDescriptor(
      name: "SearchPosts",
      path: "/protocols.Search/SearchPosts",
      type: GRPCCallType.unary
    )
  }
}

/// Usage: instantiate `Protocols_TaoBlogClient`, then call methods of this protocol to make API calls.
internal protocol Protocols_TaoBlogClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol? { get }

  func ping(
    _ request: Protocols_PingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_PingRequest, Protocols_PingResponse>

  func getInfo(
    _ request: Protocols_GetInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_GetInfoRequest, Protocols_GetInfoResponse>

  func createPost(
    _ request: Protocols_Post,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_Post, Protocols_Post>

  func getPost(
    _ request: Protocols_GetPostRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_GetPostRequest, Protocols_Post>

  func updatePost(
    _ request: Protocols_UpdatePostRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_UpdatePostRequest, Protocols_Post>

  func deletePost(
    _ request: Protocols_DeletePostRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_DeletePostRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listPosts(
    _ request: Protocols_ListPostsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_ListPostsRequest, Protocols_ListPostsResponse>

  func setPostStatus(
    _ request: Protocols_SetPostStatusRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_SetPostStatusRequest, Protocols_SetPostStatusResponse>

  func getPostComments(
    _ request: Protocols_GetPostCommentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_GetPostCommentsRequest, Protocols_GetPostCommentsResponse>

  func getPostsByTags(
    _ request: Protocols_GetPostsByTagsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_GetPostsByTagsRequest, Protocols_GetPostsByTagsResponse>

  func previewPost(
    _ request: Protocols_PreviewPostRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_PreviewPostRequest, Protocols_PreviewPostResponse>

  func checkPostTaskListItems(
    _ request: Protocols_CheckPostTaskListItemsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_CheckPostTaskListItemsRequest, Protocols_CheckPostTaskListItemsResponse>

  func createComment(
    _ request: Protocols_Comment,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_Comment, Protocols_Comment>

  func getComment(
    _ request: Protocols_GetCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_GetCommentRequest, Protocols_Comment>

  func updateComment(
    _ request: Protocols_UpdateCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_UpdateCommentRequest, Protocols_Comment>

  func deleteComment(
    _ request: Protocols_DeleteCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_DeleteCommentRequest, Protocols_DeleteCommentResponse>

  func listComments(
    _ request: Protocols_ListCommentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_ListCommentsRequest, Protocols_ListCommentsResponse>

  func setCommentPostID(
    _ request: Protocols_SetCommentPostIDRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_SetCommentPostIDRequest, Protocols_SetCommentPostIDResponse>

  func getPostCommentsCount(
    _ request: Protocols_GetPostCommentsCountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_GetPostCommentsCountRequest, Protocols_GetPostCommentsCountResponse>

  func previewComment(
    _ request: Protocols_PreviewCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Protocols_PreviewCommentRequest, Protocols_PreviewCommentResponse>
}

extension Protocols_TaoBlogClientProtocol {
  internal var serviceName: String {
    return "protocols.TaoBlog"
  }

  /// Unary call to Ping
  ///
  /// - Parameters:
  ///   - request: Request to send to Ping.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func ping(
    _ request: Protocols_PingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_PingRequest, Protocols_PingResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  /// Unary call to GetInfo
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getInfo(
    _ request: Protocols_GetInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_GetInfoRequest, Protocols_GetInfoResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInfoInterceptors() ?? []
    )
  }

  /// Unary call to CreatePost
  ///
  /// - Parameters:
  ///   - request: Request to send to CreatePost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createPost(
    _ request: Protocols_Post,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_Post, Protocols_Post> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.createPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePostInterceptors() ?? []
    )
  }

  /// Unary call to GetPost
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPost(
    _ request: Protocols_GetPostRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_GetPostRequest, Protocols_Post> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostInterceptors() ?? []
    )
  }

  /// Unary call to UpdatePost
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdatePost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updatePost(
    _ request: Protocols_UpdatePostRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_UpdatePostRequest, Protocols_Post> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.updatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePostInterceptors() ?? []
    )
  }

  /// Unary call to DeletePost
  ///
  /// - Parameters:
  ///   - request: Request to send to DeletePost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deletePost(
    _ request: Protocols_DeletePostRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_DeletePostRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.deletePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePostInterceptors() ?? []
    )
  }

  /// Unary call to ListPosts
  ///
  /// - Parameters:
  ///   - request: Request to send to ListPosts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listPosts(
    _ request: Protocols_ListPostsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_ListPostsRequest, Protocols_ListPostsResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.listPosts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListPostsInterceptors() ?? []
    )
  }

  /// Unary call to SetPostStatus
  ///
  /// - Parameters:
  ///   - request: Request to send to SetPostStatus.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setPostStatus(
    _ request: Protocols_SetPostStatusRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_SetPostStatusRequest, Protocols_SetPostStatusResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.setPostStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPostStatusInterceptors() ?? []
    )
  }

  /// Unary call to GetPostComments
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPostComments.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPostComments(
    _ request: Protocols_GetPostCommentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_GetPostCommentsRequest, Protocols_GetPostCommentsResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostComments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostCommentsInterceptors() ?? []
    )
  }

  /// Unary call to GetPostsByTags
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPostsByTags.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPostsByTags(
    _ request: Protocols_GetPostsByTagsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_GetPostsByTagsRequest, Protocols_GetPostsByTagsResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostsByTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostsByTagsInterceptors() ?? []
    )
  }

  /// Unary call to PreviewPost
  ///
  /// - Parameters:
  ///   - request: Request to send to PreviewPost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func previewPost(
    _ request: Protocols_PreviewPostRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_PreviewPostRequest, Protocols_PreviewPostResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.previewPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePreviewPostInterceptors() ?? []
    )
  }

  /// Unary call to CheckPostTaskListItems
  ///
  /// - Parameters:
  ///   - request: Request to send to CheckPostTaskListItems.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func checkPostTaskListItems(
    _ request: Protocols_CheckPostTaskListItemsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_CheckPostTaskListItemsRequest, Protocols_CheckPostTaskListItemsResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.checkPostTaskListItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCheckPostTaskListItemsInterceptors() ?? []
    )
  }

  /// Unary call to CreateComment
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createComment(
    _ request: Protocols_Comment,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_Comment, Protocols_Comment> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.createComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCommentInterceptors() ?? []
    )
  }

  /// Unary call to GetComment
  ///
  /// - Parameters:
  ///   - request: Request to send to GetComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getComment(
    _ request: Protocols_GetCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_GetCommentRequest, Protocols_Comment> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCommentInterceptors() ?? []
    )
  }

  /// Unary call to UpdateComment
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateComment(
    _ request: Protocols_UpdateCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_UpdateCommentRequest, Protocols_Comment> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.updateComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateCommentInterceptors() ?? []
    )
  }

  /// Unary call to DeleteComment
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteComment(
    _ request: Protocols_DeleteCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_DeleteCommentRequest, Protocols_DeleteCommentResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.deleteComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? []
    )
  }

  /// Unary call to ListComments
  ///
  /// - Parameters:
  ///   - request: Request to send to ListComments.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listComments(
    _ request: Protocols_ListCommentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_ListCommentsRequest, Protocols_ListCommentsResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.listComments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListCommentsInterceptors() ?? []
    )
  }

  /// Unary call to SetCommentPostID
  ///
  /// - Parameters:
  ///   - request: Request to send to SetCommentPostID.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setCommentPostID(
    _ request: Protocols_SetCommentPostIDRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_SetCommentPostIDRequest, Protocols_SetCommentPostIDResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.setCommentPostID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetCommentPostIDInterceptors() ?? []
    )
  }

  /// Unary call to GetPostCommentsCount
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPostCommentsCount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPostCommentsCount(
    _ request: Protocols_GetPostCommentsCountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_GetPostCommentsCountRequest, Protocols_GetPostCommentsCountResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostCommentsCount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostCommentsCountInterceptors() ?? []
    )
  }

  /// Unary call to PreviewComment
  ///
  /// - Parameters:
  ///   - request: Request to send to PreviewComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func previewComment(
    _ request: Protocols_PreviewCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Protocols_PreviewCommentRequest, Protocols_PreviewCommentResponse> {
    return self.makeUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.previewComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePreviewCommentInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Protocols_TaoBlogClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Protocols_TaoBlogNIOClient")
internal final class Protocols_TaoBlogClient: Protocols_TaoBlogClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the protocols.TaoBlog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Protocols_TaoBlogNIOClient: Protocols_TaoBlogClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol?

  /// Creates a client for the protocols.TaoBlog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Protocols_TaoBlogAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol? { get }

  func makePingCall(
    _ request: Protocols_PingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_PingRequest, Protocols_PingResponse>

  func makeGetInfoCall(
    _ request: Protocols_GetInfoRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_GetInfoRequest, Protocols_GetInfoResponse>

  func makeCreatePostCall(
    _ request: Protocols_Post,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_Post, Protocols_Post>

  func makeGetPostCall(
    _ request: Protocols_GetPostRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_GetPostRequest, Protocols_Post>

  func makeUpdatePostCall(
    _ request: Protocols_UpdatePostRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_UpdatePostRequest, Protocols_Post>

  func makeDeletePostCall(
    _ request: Protocols_DeletePostRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_DeletePostRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeListPostsCall(
    _ request: Protocols_ListPostsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_ListPostsRequest, Protocols_ListPostsResponse>

  func makeSetPostStatusCall(
    _ request: Protocols_SetPostStatusRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_SetPostStatusRequest, Protocols_SetPostStatusResponse>

  func makeGetPostCommentsCall(
    _ request: Protocols_GetPostCommentsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_GetPostCommentsRequest, Protocols_GetPostCommentsResponse>

  func makeGetPostsByTagsCall(
    _ request: Protocols_GetPostsByTagsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_GetPostsByTagsRequest, Protocols_GetPostsByTagsResponse>

  func makePreviewPostCall(
    _ request: Protocols_PreviewPostRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_PreviewPostRequest, Protocols_PreviewPostResponse>

  func makeCheckPostTaskListItemsCall(
    _ request: Protocols_CheckPostTaskListItemsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_CheckPostTaskListItemsRequest, Protocols_CheckPostTaskListItemsResponse>

  func makeCreateCommentCall(
    _ request: Protocols_Comment,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_Comment, Protocols_Comment>

  func makeGetCommentCall(
    _ request: Protocols_GetCommentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_GetCommentRequest, Protocols_Comment>

  func makeUpdateCommentCall(
    _ request: Protocols_UpdateCommentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_UpdateCommentRequest, Protocols_Comment>

  func makeDeleteCommentCall(
    _ request: Protocols_DeleteCommentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_DeleteCommentRequest, Protocols_DeleteCommentResponse>

  func makeListCommentsCall(
    _ request: Protocols_ListCommentsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_ListCommentsRequest, Protocols_ListCommentsResponse>

  func makeSetCommentPostIDCall(
    _ request: Protocols_SetCommentPostIDRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_SetCommentPostIDRequest, Protocols_SetCommentPostIDResponse>

  func makeGetPostCommentsCountCall(
    _ request: Protocols_GetPostCommentsCountRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_GetPostCommentsCountRequest, Protocols_GetPostCommentsCountResponse>

  func makePreviewCommentCall(
    _ request: Protocols_PreviewCommentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Protocols_PreviewCommentRequest, Protocols_PreviewCommentResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Protocols_TaoBlogAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Protocols_TaoBlogClientMetadata.serviceDescriptor
  }

  internal var interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makePingCall(
    _ request: Protocols_PingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_PingRequest, Protocols_PingResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  internal func makeGetInfoCall(
    _ request: Protocols_GetInfoRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_GetInfoRequest, Protocols_GetInfoResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInfoInterceptors() ?? []
    )
  }

  internal func makeCreatePostCall(
    _ request: Protocols_Post,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_Post, Protocols_Post> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.createPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePostInterceptors() ?? []
    )
  }

  internal func makeGetPostCall(
    _ request: Protocols_GetPostRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_GetPostRequest, Protocols_Post> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostInterceptors() ?? []
    )
  }

  internal func makeUpdatePostCall(
    _ request: Protocols_UpdatePostRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_UpdatePostRequest, Protocols_Post> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.updatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePostInterceptors() ?? []
    )
  }

  internal func makeDeletePostCall(
    _ request: Protocols_DeletePostRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_DeletePostRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.deletePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePostInterceptors() ?? []
    )
  }

  internal func makeListPostsCall(
    _ request: Protocols_ListPostsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_ListPostsRequest, Protocols_ListPostsResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.listPosts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListPostsInterceptors() ?? []
    )
  }

  internal func makeSetPostStatusCall(
    _ request: Protocols_SetPostStatusRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_SetPostStatusRequest, Protocols_SetPostStatusResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.setPostStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPostStatusInterceptors() ?? []
    )
  }

  internal func makeGetPostCommentsCall(
    _ request: Protocols_GetPostCommentsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_GetPostCommentsRequest, Protocols_GetPostCommentsResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostComments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostCommentsInterceptors() ?? []
    )
  }

  internal func makeGetPostsByTagsCall(
    _ request: Protocols_GetPostsByTagsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_GetPostsByTagsRequest, Protocols_GetPostsByTagsResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostsByTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostsByTagsInterceptors() ?? []
    )
  }

  internal func makePreviewPostCall(
    _ request: Protocols_PreviewPostRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_PreviewPostRequest, Protocols_PreviewPostResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.previewPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePreviewPostInterceptors() ?? []
    )
  }

  internal func makeCheckPostTaskListItemsCall(
    _ request: Protocols_CheckPostTaskListItemsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_CheckPostTaskListItemsRequest, Protocols_CheckPostTaskListItemsResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.checkPostTaskListItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCheckPostTaskListItemsInterceptors() ?? []
    )
  }

  internal func makeCreateCommentCall(
    _ request: Protocols_Comment,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_Comment, Protocols_Comment> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.createComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCommentInterceptors() ?? []
    )
  }

  internal func makeGetCommentCall(
    _ request: Protocols_GetCommentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_GetCommentRequest, Protocols_Comment> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCommentInterceptors() ?? []
    )
  }

  internal func makeUpdateCommentCall(
    _ request: Protocols_UpdateCommentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_UpdateCommentRequest, Protocols_Comment> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.updateComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateCommentInterceptors() ?? []
    )
  }

  internal func makeDeleteCommentCall(
    _ request: Protocols_DeleteCommentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_DeleteCommentRequest, Protocols_DeleteCommentResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.deleteComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? []
    )
  }

  internal func makeListCommentsCall(
    _ request: Protocols_ListCommentsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_ListCommentsRequest, Protocols_ListCommentsResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.listComments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListCommentsInterceptors() ?? []
    )
  }

  internal func makeSetCommentPostIDCall(
    _ request: Protocols_SetCommentPostIDRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_SetCommentPostIDRequest, Protocols_SetCommentPostIDResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.setCommentPostID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetCommentPostIDInterceptors() ?? []
    )
  }

  internal func makeGetPostCommentsCountCall(
    _ request: Protocols_GetPostCommentsCountRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_GetPostCommentsCountRequest, Protocols_GetPostCommentsCountResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostCommentsCount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostCommentsCountInterceptors() ?? []
    )
  }

  internal func makePreviewCommentCall(
    _ request: Protocols_PreviewCommentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Protocols_PreviewCommentRequest, Protocols_PreviewCommentResponse> {
    return self.makeAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.previewComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePreviewCommentInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Protocols_TaoBlogAsyncClientProtocol {
  internal func ping(
    _ request: Protocols_PingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_PingResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.ping.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePingInterceptors() ?? []
    )
  }

  internal func getInfo(
    _ request: Protocols_GetInfoRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_GetInfoResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInfoInterceptors() ?? []
    )
  }

  internal func createPost(
    _ request: Protocols_Post,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_Post {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.createPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePostInterceptors() ?? []
    )
  }

  internal func getPost(
    _ request: Protocols_GetPostRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_Post {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostInterceptors() ?? []
    )
  }

  internal func updatePost(
    _ request: Protocols_UpdatePostRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_Post {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.updatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePostInterceptors() ?? []
    )
  }

  internal func deletePost(
    _ request: Protocols_DeletePostRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.deletePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePostInterceptors() ?? []
    )
  }

  internal func listPosts(
    _ request: Protocols_ListPostsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_ListPostsResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.listPosts.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListPostsInterceptors() ?? []
    )
  }

  internal func setPostStatus(
    _ request: Protocols_SetPostStatusRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_SetPostStatusResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.setPostStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPostStatusInterceptors() ?? []
    )
  }

  internal func getPostComments(
    _ request: Protocols_GetPostCommentsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_GetPostCommentsResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostComments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostCommentsInterceptors() ?? []
    )
  }

  internal func getPostsByTags(
    _ request: Protocols_GetPostsByTagsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_GetPostsByTagsResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostsByTags.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostsByTagsInterceptors() ?? []
    )
  }

  internal func previewPost(
    _ request: Protocols_PreviewPostRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_PreviewPostResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.previewPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePreviewPostInterceptors() ?? []
    )
  }

  internal func checkPostTaskListItems(
    _ request: Protocols_CheckPostTaskListItemsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_CheckPostTaskListItemsResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.checkPostTaskListItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCheckPostTaskListItemsInterceptors() ?? []
    )
  }

  internal func createComment(
    _ request: Protocols_Comment,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_Comment {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.createComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateCommentInterceptors() ?? []
    )
  }

  internal func getComment(
    _ request: Protocols_GetCommentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_Comment {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCommentInterceptors() ?? []
    )
  }

  internal func updateComment(
    _ request: Protocols_UpdateCommentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_Comment {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.updateComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateCommentInterceptors() ?? []
    )
  }

  internal func deleteComment(
    _ request: Protocols_DeleteCommentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_DeleteCommentResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.deleteComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? []
    )
  }

  internal func listComments(
    _ request: Protocols_ListCommentsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_ListCommentsResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.listComments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListCommentsInterceptors() ?? []
    )
  }

  internal func setCommentPostID(
    _ request: Protocols_SetCommentPostIDRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_SetCommentPostIDResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.setCommentPostID.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetCommentPostIDInterceptors() ?? []
    )
  }

  internal func getPostCommentsCount(
    _ request: Protocols_GetPostCommentsCountRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_GetPostCommentsCountResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.getPostCommentsCount.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPostCommentsCountInterceptors() ?? []
    )
  }

  internal func previewComment(
    _ request: Protocols_PreviewCommentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Protocols_PreviewCommentResponse {
    return try await self.performAsyncUnaryCall(
      path: Protocols_TaoBlogClientMetadata.Methods.previewComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePreviewCommentInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Protocols_TaoBlogAsyncClient: Protocols_TaoBlogAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Protocols_TaoBlogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Protocols_TaoBlogClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'ping'.
  func makePingInterceptors() -> [ClientInterceptor<Protocols_PingRequest, Protocols_PingResponse>]

  /// - Returns: Interceptors to use when invoking 'getInfo'.
  func makeGetInfoInterceptors() -> [ClientInterceptor<Protocols_GetInfoRequest, Protocols_GetInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'createPost'.
  func makeCreatePostInterceptors() -> [ClientInterceptor<Protocols_Post, Protocols_Post>]

  /// - Returns: Interceptors to use when invoking 'getPost'.
  func makeGetPostInterceptors() -> [ClientInterceptor<Protocols_GetPostRequest, Protocols_Post>]

  /// - Returns: Interceptors to use when invoking 'updatePost'.
  func makeUpdatePostInterceptors() -> [ClientInterceptor<Protocols_UpdatePostRequest, Protocols_Post>]

  /// - Returns: Interceptors to use when invoking 'deletePost'.
  func makeDeletePostInterceptors() -> [ClientInterceptor<Protocols_DeletePostRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'listPosts'.
  func makeListPostsInterceptors() -> [ClientInterceptor<Protocols_ListPostsRequest, Protocols_ListPostsResponse>]

  /// - Returns: Interceptors to use when invoking 'setPostStatus'.
  func makeSetPostStatusInterceptors() -> [ClientInterceptor<Protocols_SetPostStatusRequest, Protocols_SetPostStatusResponse>]

  /// - Returns: Interceptors to use when invoking 'getPostComments'.
  func makeGetPostCommentsInterceptors() -> [ClientInterceptor<Protocols_GetPostCommentsRequest, Protocols_GetPostCommentsResponse>]

  /// - Returns: Interceptors to use when invoking 'getPostsByTags'.
  func makeGetPostsByTagsInterceptors() -> [ClientInterceptor<Protocols_GetPostsByTagsRequest, Protocols_GetPostsByTagsResponse>]

  /// - Returns: Interceptors to use when invoking 'previewPost'.
  func makePreviewPostInterceptors() -> [ClientInterceptor<Protocols_PreviewPostRequest, Protocols_PreviewPostResponse>]

  /// - Returns: Interceptors to use when invoking 'checkPostTaskListItems'.
  func makeCheckPostTaskListItemsInterceptors() -> [ClientInterceptor<Protocols_CheckPostTaskListItemsRequest, Protocols_CheckPostTaskListItemsResponse>]

  /// - Returns: Interceptors to use when invoking 'createComment'.
  func makeCreateCommentInterceptors() -> [ClientInterceptor<Protocols_Comment, Protocols_Comment>]

  /// - Returns: Interceptors to use when invoking 'getComment'.
  func makeGetCommentInterceptors() -> [ClientInterceptor<Protocols_GetCommentRequest, Protocols_Comment>]

  /// - Returns: Interceptors to use when invoking 'updateComment'.
  func makeUpdateCommentInterceptors() -> [ClientInterceptor<Protocols_UpdateCommentRequest, Protocols_Comment>]

  /// - Returns: Interceptors to use when invoking 'deleteComment'.
  func makeDeleteCommentInterceptors() -> [ClientInterceptor<Protocols_DeleteCommentRequest, Protocols_DeleteCommentResponse>]

  /// - Returns: Interceptors to use when invoking 'listComments'.
  func makeListCommentsInterceptors() -> [ClientInterceptor<Protocols_ListCommentsRequest, Protocols_ListCommentsResponse>]

  /// - Returns: Interceptors to use when invoking 'setCommentPostID'.
  func makeSetCommentPostIDInterceptors() -> [ClientInterceptor<Protocols_SetCommentPostIDRequest, Protocols_SetCommentPostIDResponse>]

  /// - Returns: Interceptors to use when invoking 'getPostCommentsCount'.
  func makeGetPostCommentsCountInterceptors() -> [ClientInterceptor<Protocols_GetPostCommentsCountRequest, Protocols_GetPostCommentsCountResponse>]

  /// - Returns: Interceptors to use when invoking 'previewComment'.
  func makePreviewCommentInterceptors() -> [ClientInterceptor<Protocols_PreviewCommentRequest, Protocols_PreviewCommentResponse>]
}

internal enum Protocols_TaoBlogClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "TaoBlog",
    fullName: "protocols.TaoBlog",
    methods: [
      Protocols_TaoBlogClientMetadata.Methods.ping,
      Protocols_TaoBlogClientMetadata.Methods.getInfo,
      Protocols_TaoBlogClientMetadata.Methods.createPost,
      Protocols_TaoBlogClientMetadata.Methods.getPost,
      Protocols_TaoBlogClientMetadata.Methods.updatePost,
      Protocols_TaoBlogClientMetadata.Methods.deletePost,
      Protocols_TaoBlogClientMetadata.Methods.listPosts,
      Protocols_TaoBlogClientMetadata.Methods.setPostStatus,
      Protocols_TaoBlogClientMetadata.Methods.getPostComments,
      Protocols_TaoBlogClientMetadata.Methods.getPostsByTags,
      Protocols_TaoBlogClientMetadata.Methods.previewPost,
      Protocols_TaoBlogClientMetadata.Methods.checkPostTaskListItems,
      Protocols_TaoBlogClientMetadata.Methods.createComment,
      Protocols_TaoBlogClientMetadata.Methods.getComment,
      Protocols_TaoBlogClientMetadata.Methods.updateComment,
      Protocols_TaoBlogClientMetadata.Methods.deleteComment,
      Protocols_TaoBlogClientMetadata.Methods.listComments,
      Protocols_TaoBlogClientMetadata.Methods.setCommentPostID,
      Protocols_TaoBlogClientMetadata.Methods.getPostCommentsCount,
      Protocols_TaoBlogClientMetadata.Methods.previewComment,
    ]
  )

  internal enum Methods {
    internal static let ping = GRPCMethodDescriptor(
      name: "Ping",
      path: "/protocols.TaoBlog/Ping",
      type: GRPCCallType.unary
    )

    internal static let getInfo = GRPCMethodDescriptor(
      name: "GetInfo",
      path: "/protocols.TaoBlog/GetInfo",
      type: GRPCCallType.unary
    )

    internal static let createPost = GRPCMethodDescriptor(
      name: "CreatePost",
      path: "/protocols.TaoBlog/CreatePost",
      type: GRPCCallType.unary
    )

    internal static let getPost = GRPCMethodDescriptor(
      name: "GetPost",
      path: "/protocols.TaoBlog/GetPost",
      type: GRPCCallType.unary
    )

    internal static let updatePost = GRPCMethodDescriptor(
      name: "UpdatePost",
      path: "/protocols.TaoBlog/UpdatePost",
      type: GRPCCallType.unary
    )

    internal static let deletePost = GRPCMethodDescriptor(
      name: "DeletePost",
      path: "/protocols.TaoBlog/DeletePost",
      type: GRPCCallType.unary
    )

    internal static let listPosts = GRPCMethodDescriptor(
      name: "ListPosts",
      path: "/protocols.TaoBlog/ListPosts",
      type: GRPCCallType.unary
    )

    internal static let setPostStatus = GRPCMethodDescriptor(
      name: "SetPostStatus",
      path: "/protocols.TaoBlog/SetPostStatus",
      type: GRPCCallType.unary
    )

    internal static let getPostComments = GRPCMethodDescriptor(
      name: "GetPostComments",
      path: "/protocols.TaoBlog/GetPostComments",
      type: GRPCCallType.unary
    )

    internal static let getPostsByTags = GRPCMethodDescriptor(
      name: "GetPostsByTags",
      path: "/protocols.TaoBlog/GetPostsByTags",
      type: GRPCCallType.unary
    )

    internal static let previewPost = GRPCMethodDescriptor(
      name: "PreviewPost",
      path: "/protocols.TaoBlog/PreviewPost",
      type: GRPCCallType.unary
    )

    internal static let checkPostTaskListItems = GRPCMethodDescriptor(
      name: "CheckPostTaskListItems",
      path: "/protocols.TaoBlog/CheckPostTaskListItems",
      type: GRPCCallType.unary
    )

    internal static let createComment = GRPCMethodDescriptor(
      name: "CreateComment",
      path: "/protocols.TaoBlog/CreateComment",
      type: GRPCCallType.unary
    )

    internal static let getComment = GRPCMethodDescriptor(
      name: "GetComment",
      path: "/protocols.TaoBlog/GetComment",
      type: GRPCCallType.unary
    )

    internal static let updateComment = GRPCMethodDescriptor(
      name: "UpdateComment",
      path: "/protocols.TaoBlog/UpdateComment",
      type: GRPCCallType.unary
    )

    internal static let deleteComment = GRPCMethodDescriptor(
      name: "DeleteComment",
      path: "/protocols.TaoBlog/DeleteComment",
      type: GRPCCallType.unary
    )

    internal static let listComments = GRPCMethodDescriptor(
      name: "ListComments",
      path: "/protocols.TaoBlog/ListComments",
      type: GRPCCallType.unary
    )

    internal static let setCommentPostID = GRPCMethodDescriptor(
      name: "SetCommentPostID",
      path: "/protocols.TaoBlog/SetCommentPostID",
      type: GRPCCallType.unary
    )

    internal static let getPostCommentsCount = GRPCMethodDescriptor(
      name: "GetPostCommentsCount",
      path: "/protocols.TaoBlog/GetPostCommentsCount",
      type: GRPCCallType.unary
    )

    internal static let previewComment = GRPCMethodDescriptor(
      name: "PreviewComment",
      path: "/protocols.TaoBlog/PreviewComment",
      type: GRPCCallType.unary
    )
  }
}

