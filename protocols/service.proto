syntax = "proto3";
package protocols;
option go_package = "github.com/movsb/taoblog/proto";

import "auth.proto";
import "backup.proto";
import "post.proto";
import "comment.proto";
import "search.proto";
import "config.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

service Auth {
	rpc BeginPasskeysLogin (BeginPasskeysLoginRequest) returns (BeginPasskeysLoginResponse);
	rpc FinishPasskeysLogin (FinishPasskeysLoginRequest) returns (FinishPasskeysLoginResponse);
}

service Management {
	// Config

	rpc GetConfig (GetConfigRequest) returns (GetConfigResponse) {
		option (google.api.http) = {
			get: "/v3/configs/{path}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取配置。";
		};
	};
	rpc SetConfig (SetConfigRequest) returns (SetConfigResponse) {
		option (google.api.http) = {
			post: "/v3/configs/{path}";
			body: "yaml";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "设置配置。";
		};
	};

	// Backup

	rpc Backup(BackupRequest) returns (stream BackupResponse) {
		option (google.api.http) = {
			get: "/v3/backup";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "导出数据库（拖库）。";
		};
	}

	rpc BackupFiles (stream BackupFilesRequest) returns (stream BackupFilesResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "导出文件。";
		};
	};

	// 文件系统管理：期允许管理的对象：文章附件、评论附件、备份文件、根目录等。
	// TODO：合并上述 BackupFiles 接口、Backup 接口。

	rpc FileSystem(stream FileSystemRequest) returns (stream FileSystemResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "文件管理。";
		};
	}

	rpc Restart(RestartRequest) returns (RestartResponse) {}
}

service Search {
	rpc SearchPosts(SearchPostsRequest) returns (SearchPostsResponse) {
		option (google.api.http) = {
			get: "/v3/search/posts";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "文章搜索。";
		};
	}
}

service TaoBlog {
	rpc Ping(PingRequest) returns (PingResponse) {
		option (google.api.http) = {
			get: "/v3/ping";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Ping 服务器。";
		};
	}
	
	rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {
		option (google.api.http) = {
			get: "/v3/info";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取基本信息。";
		};
	}

	// POSTS

	rpc CreatePost(Post) returns (Post) {
		option (google.api.http) = {
			post: "/v3/posts";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建新文章。";
		};
	}
	rpc GetPost (GetPostRequest) returns (Post) {
		option (google.api.http) = {
			get: "/v3/posts/{id=*}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取某篇文章。";
		};
	}
	rpc UpdatePost(UpdatePostRequest) returns (Post) {
		option (google.api.http) = {
			patch: "/v3/posts/{post.id=*}";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新文章。";
		};
	}
	rpc DeletePost (DeletePostRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v3/posts/{id}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除文章及其所有相关资源（评论、标签等）。";
		};
	}
	rpc ListPosts (ListPostsRequest) returns (ListPostsResponse) {
		option (google.api.http) = {
			get: "/v3/posts";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "列举文章。";
		};
	}
	rpc SetPostStatus (SetPostStatusRequest) returns (SetPostStatusResponse) {
		option (google.api.http) = {
			post: "/v3/posts/{id=*}:setStatus";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "是否公开文章。";
		};
	}
	rpc GetPostComments(GetPostCommentsRequest) returns (GetPostCommentsResponse) {
		option (google.api.http) = {
			get: "/v3/posts/{id=*}/comments";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取某篇文章的全部评论。比 ListComments 接口简单很多。";
		};
	}
	rpc GetPostsByTags(GetPostsByTagsRequest) returns (GetPostsByTagsResponse) {
		option (google.api.http) = {
			get: "/v3/posts:tags";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "根据标签列表获取全部的相关文章。";
		};
	}
	rpc PreviewPost (PreviewPostRequest) returns (PreviewPostResponse) {
		option (google.api.http) = {
			post: "/v3/posts:preview";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "文章预览。";
		};
	}
	rpc CheckPostTaskListItems (CheckPostTaskListItemsRequest) returns (CheckPostTaskListItemsResponse) {
		option (google.api.http) = {
			patch: "/v3/posts/{id=*}/tasks:check";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "完成/取消完成任务。";
		};
	}

	// Comments

	rpc CreateComment (Comment) returns (Comment) {
		option (google.api.http) = {
			post: "/v3/posts/{post_id=*}/comments";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建一条评论。";
		};
	}
	rpc GetComment(GetCommentRequest) returns (Comment) {
		option (google.api.http) = {
			get: "/v3/comments/{id=*}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取指定编号的评论。";
		};
	}
	rpc UpdateComment(UpdateCommentRequest) returns (Comment) {
		option (google.api.http) = {
			patch: "/v3/comments/{comment.id=*}";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新指定编号的评论。";
		};
	}
	rpc DeleteComment (DeleteCommentRequest) returns (DeleteCommentResponse) {
		option (google.api.http) = {
			delete: "/v3/comments/{id=*}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除某条评论。";
		};
	}
	rpc ListComments (ListCommentsRequest) returns (ListCommentsResponse) {
		option (google.api.http) = {
			get: "/v3/comments";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取评论列表。";
		};
	}
	rpc SetCommentPostID (SetCommentPostIDRequest) returns (SetCommentPostIDResponse) {
		option (google.api.http) = {
			post: "/v3/comments/{id=*}:setPostID";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "转移某顶级评论（连同子评论）到另一篇文章。";
		};
	}
	rpc GetPostCommentsCount (GetPostCommentsCountRequest) returns (GetPostCommentsCountResponse) {
		option (google.api.http) = {
			get: "/v3/posts/{post_id=*}/comments:count";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取文章评论数。";
		};
	}
	rpc PreviewComment (PreviewCommentRequest) returns (PreviewCommentResponse) {
		option (google.api.http) = {
			post: "/v3/comments:preview";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "评论预览。";
		};
	}
}

message PingRequest {

}

message PingResponse {
	string pong = 1;
}
