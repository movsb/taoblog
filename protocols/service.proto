syntax = "proto3";
package protocols;
option go_package = "github.com/movsb/taoblog/protocols";

import "protocols/backup.proto";
import "protocols/post.proto";
import "protocols/comment.proto";
import "protocols/search.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

service Management {
	// Backup

	rpc Backup(BackupRequest) returns (stream BackupResponse) {
		option (google.api.http) = {
			get: "/v3/backup";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "导出数据库（拖库）。";
		};
	}

	rpc BackupFiles (stream BackupFilesRequest) returns (stream BackupFilesResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "导出文件。";
		};
	};

	rpc SetRedirect (SetRedirectRequest) returns (google.protobuf.Empty) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "设置重定向。";
		};
	};

	// 文件系统管理：期允许管理的对象：文章附近、评论附件、备份文件、根目录等。

	rpc FileSystem(stream FileSystemRequest) returns (stream FileSystemResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "文件管理。";
		};
	}
}

service Search {
	rpc SearchPosts(SearchPostsRequest) returns (SearchPostsResponse) {
		option (google.api.http) = {
			get: "/v3/search/posts";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "文章搜索。";
		};
	}
}

service TaoBlog {
	rpc Ping(PingRequest) returns (PingResponse) {
		option (google.api.http) = {
			get: "/v3/ping";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Ping 服务器。";
		};
	}

	// POSTS

	rpc CreatePost(Post) returns (Post) {
		option (google.api.http) = {
			post: "/v3/posts";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建新文章。";
		};
	}
	rpc GetPost (GetPostRequest) returns (Post) {
		option (google.api.http) = {
			get: "/v3/posts/{id=*}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取某篇文章。";
		};
	}
	rpc UpdatePost(UpdatePostRequest) returns (Post) {
		option (google.api.http) = {
			patch: "/v3/posts/{post.id=*}";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新文章。";
		};
	}
	rpc DeletePost (DeletePostRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v3/posts/{id}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除文章及其所有相关资源（评论、标签等）。";
		};
	}
	rpc SetPostStatus (SetPostStatusRequest) returns (SetPostStatusResponse) {
		option (google.api.http) = {
			post: "/v3/posts/{id=*}:setStatus";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "是否公开文章。";
		};
	}

	// Comments

	rpc CreateComment (Comment) returns (Comment) {
		option (google.api.http) = {
			post: "/v3/posts/{post_id=*}/comments";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "创建一条评论。";
		};
	}
	rpc GetComment(GetCommentRequest) returns (Comment) {
		option (google.api.http) = {
			get: "/v3/comments/{id=*}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取指定编号的评论。";
		};
	}
	rpc UpdateComment(UpdateCommentRequest) returns (Comment) {
		option (google.api.http) = {
			patch: "/v3/comments/{comment.id=*}";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "更新指定编号的评论。";
		};
	}
	rpc DeleteComment (DeleteCommentRequest) returns (DeleteCommentResponse) {
		option (google.api.http) = {
			delete: "/v3/comments/{id=*}";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "删除某条评论。";
		};
	}
	rpc ListComments (ListCommentsRequest) returns (ListCommentsResponse) {
		option (google.api.http) = {
			get: "/v3/posts/{post_id=*}/comments";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取（某篇文章的）评论列表。";
		};
	}
	rpc SetCommentPostID (SetCommentPostIDRequest) returns (SetCommentPostIDResponse) {
		option (google.api.http) = {
			post: "/v3/comments/{id=*}:setPostID";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "转移某顶级评论（连同子评论）到另一篇文章。";
		};
	}
	rpc GetPostCommentsCount (GetPostCommentsCountRequest) returns (GetPostCommentsCountResponse) {
		option (google.api.http) = {
			get: "/v3/posts/{post_id=*}/comments:count";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取文章评论数。";
		};
	}
	rpc PreviewComment (PreviewCommentRequest) returns (PreviewCommentResponse) {
		option (google.api.http) = {
			post: "/v3/comments:preview";
			body: "*";
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "评论预览。";
		};
	}
}

message PingRequest {

}

message PingResponse {
	string pong = 1;
}
