syntax = "proto3";
package protocols;
option go_package = "github.com/movsb/taoblog/proto";

import "google/protobuf/field_mask.proto";

// 内容渲染选项。
message PostContentOptions {
	// 要不要内容？
	bool with_content = 1;

	// 保留 #一级标题？
	// 几乎只有在文章编辑预览的时候用得着，所以默认不保留。
	bool keep_title_heading = 2;

	// 要不要渲染代码 (成 HTML）？
	bool render_code_blocks = 3;

	// 文章中的相对链接改成使用绝对链接
	bool use_absolute_paths = 4;

	// 要不要生成美化后的结果？
	bool prettify_html = 5;

	enum OpenLinkInNewTabKind {
		OpenLinkInNewTabKindKeep = 0;
		OpenLinkInNewTabKindNever = 1;
		OpenLinkInNewTabKindAll = 2;
		OpenLinkInNewTabKindExternal = 3;
	}
	// 新窗口打开链接？
	OpenLinkInNewTabKind open_links_in_new_tab = 6;

	// 禁止显示 iframe 预览？
	bool no_iframe_preview = 7;
}

message Comment {
	int64 id = 1;
	int64 parent = 2;
	int64 root = 3;
	int64 post_id = 4;
	string author = 5;
	string email = 6;
	string url = 7;
	string ip = 8;
	int32 date = 9;
	string source_type = 10;
	string source = 11;
	string content = 12;
	int32 user_id = 13;
	string date_fuzzy = 15;
	string geo_location = 16;
	// 前端用户是否可以编辑此评论？
	// 仅在 list/create 接口中返回。
	bool can_edit = 17;
	// 头像内部临时ID
	uint32 avatar = 18;

	int32 modified = 19;

	// 创建时间和修改时间所在的时区。
	string date_timezone = 20;
	string modified_timezone = 21;
}

message GetCommentRequest {
	int64 id = 1;
}

message UpdateCommentRequest {
	Comment comment = 1;
	google.protobuf.FieldMask update_mask = 2;
}

message DeleteCommentRequest {
	int32 id = 1;
}

message DeleteCommentResponse {

}

// 文章权限。
//
// 如果是 Unknown，默认为 All。
enum Ownership {
	OwnershipUnknown = 0;
	// 自己创建的。
	OwnershipMine = 1;
	// 自己创建的 + 他们分享的。
	OwnershipMineAndShared = 2;
	// 他们分享的 + 他们公开的。
	OwnershipTheir = 3;
	// 自己创建的 + 他们分享的 + 他们公开的。
	OwnershipAll = 100;
}

message ListCommentsRequest {
	// 0 for all posts.
	int64 post_id = 2;
	// must be > 0.
	int64 limit = 4;
	int64 offset = 5;
	string order_by = 6;
	
	Ownership ownership = 9;

	// 文章的种类，比如 post、page、tweet。
	// 如果不指定的话，则是全部种类。
	repeated string types = 10;

	PostContentOptions content_options = 11;
}

message ListCommentsResponse {
	repeated Comment comments = 1;
}

message SetCommentPostIDRequest {
	int64 id = 1;
	int64 post_id = 2;
}

message SetCommentPostIDResponse {

}

message PreviewCommentRequest {
	string markdown = 1;
	// 所属文章编号。不是必须的。
	// 但是为了计算图片的大小，建议加上。
	int32 post_id = 2;
}

message PreviewCommentResponse {
	string html = 1;
}
