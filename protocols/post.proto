syntax = "proto3";
package protocols;
option go_package = "github.com/movsb/taoblog/proto";

import "google/protobuf/field_mask.proto";
import "protocols/comment.proto";

message Metas {
	message Source {
		string name = 1;
		string url = 2;
		string description = 3;
		int32  time = 4;
	}
	message Geo {
		string name = 1;
		float longitude = 2;
		float latitude = 3;
	}
	message Origin {
		enum Platform {
			OriginUnspecified = 0;
			Twitter = 1;
		}
		// 来源平台。
		Platform platform = 1;
		// 唯一ID编成部分。
		repeated string slugs = 2;
		// 描述。
		string description = 3;
	}
	
	// TODO：以下两者应该由 style.css 和 script.js 等独立文件实现。
	// 置于 <head> 最后的。
	string header = 1;
	// 置于 <body> 最后的。
	string footer = 2;

	// 文章是否已经过时。
	bool outdated = 3;
	
	// 是否以宽屏模式显示内容。
	bool wide = 4;

	// 文章附件来源。
	// 第一个参数是相对路径。
	map<string,Source> sources = 10;

	// 地理位置信息。
	Geo geo = 11;

	// 文章原始来源信息
	Origin origin = 12;

	// 微信短链接。形如："-UWZEu5Z74DZgRzKksTBtw"。
	// TODO 合并进 Origin。
	string weixin = 100;
}

message Post {
	int64 id = 1;
	int32 date = 2;
	int32 modified = 3;
	string title = 4;
	string content = 5;
	string slug = 6;
	string type = 7;
	int64 category = 8;
	string status = 9;
	int64 page_view = 10;
	bool comment_status = 11;
	int64 comments = 12;
	Metas metas = 13;
	string source = 14;
	string source_type = 15;
	repeated string tags = 16;

	// ~~文章最后被评论的时间~~。
	// 更新：文章的评论最后有更新（包括：创建、更新、删除）的时间。
	// 与文章的更新时间一起贡献给 304 处理函数。
	// 这个值可以是空的，表示没有被评论过。（更新：也可能表示数据库升级开始后没有评论过）
	// TODO 考虑换个名字了。
	int32 last_commented_at = 17;

	// 相关文章列表。
	// 数量固定。
	// 仅在 GetPost 时指定选项后返回。
	// 只有 id 和 title 有效。
	repeated Post relates = 18;

	// 文章的链接。
	string link = 19;
}

enum LinkKind {
	LinkKindNone = 0;
	LinkKindRooted = 1;
	LinkKindFull = 2;
}

message GetPostRequest {
	// 选择其一。
	int32 id = 1;
	string page = 3;

	// 是否包含“相关文章”。
	bool with_relates = 99;
	PostContentOptions content_options = 100;
	LinkKind with_link = 101;
}

message UpdatePostRequest {
	Post post = 1;
	google.protobuf.FieldMask update_mask = 2;
	// 默认 modified 已被用作防冲突的版本号。
	// touch 可以用来控制是否更新 modified 为当前时间。
	// 默认为 false，表示要更新。
	bool do_not_touch = 3;
}

message DeletePostRequest {
	int32 id = 1;
}

message ListPostsRequest {
	int32 limit = 1;
	string order_by = 2;
	PostContentOptions content_options = 3;
	repeated string kinds = 4;
	LinkKind with_link = 5;

	// 如果 > 0，则只会列出从这个时间点开始、结束的文章。
	// 以后有过更新的文章，适用于备份用。
	// 时间范围：[NotBefore, NotAfter)。
	int32 modified_not_before = 6;
	int32 modified_not_after = 7;
}

message ListPostsResponse {
	repeated Post posts = 1;
}

message GetPostCommentsCountRequest {
	int64 post_id = 1;
}

message GetPostCommentsCountResponse {
	int64 count = 1;
}

message SetPostStatusRequest {
	int64 id = 1;
	bool public = 2;

	// Whether to create_time and update_time
	bool touch = 3;
}

message SetPostStatusResponse {

}

// 获取某篇文章的全部评论。
message GetPostCommentsRequest {
	int64 id = 1;
}
message GetPostCommentsResponse {
	repeated Comment comments = 1;
}

message GetPostsByTagsRequest {
	repeated string tags = 1;
	PostContentOptions content_options = 2;
	LinkKind with_link = 3;
}
message GetPostsByTagsResponse {
	repeated Post posts = 1;
}

message PreviewPostRequest {
	int32 id = 1;
	string markdown = 2;
}

message PreviewPostResponse {
	string html = 1;
}

message FileSpec {
	string path = 1;
	uint32 mode = 2;
	uint32 size = 3;
	uint32 time = 4;
}

message FileSystemRequest {
	message InitRequest {
		message Post {
			int64 id = 1;
		}
		oneof For {
			Post post = 1;
		}
	}

	InitRequest init = 1;

	message ListFilesRequest {}
	message WriteFileRequest {
		FileSpec spec = 1;
		bytes data = 2;
	}
	message DeleteFileRequest {
		string path = 1;
	}
	oneof Request {
		ListFilesRequest list_files = 10;
		WriteFileRequest write_file = 11;
		DeleteFileRequest delete_file = 12;
	}
}

message FileSystemResponse {
	message InitResponse{}
	
	InitResponse init = 1;
	
	message ListFilesResponse {
		repeated FileSpec files = 1;
	}
	message WriteFileResponse { }
	message DeleteFileResponse { }

	oneof Response {
		ListFilesResponse list_files = 10;
		WriteFileResponse write_file = 11;
		DeleteFileResponse delete_file = 12;
	}
}
