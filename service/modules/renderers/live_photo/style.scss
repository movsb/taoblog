.live-photo {
	// 必须在代码里面计算并设置在 inline style 上。
	// width: 252px;
	// height: 336px;
	// 允许子元素为 absolute
	position: relative;
	// 允许缩放
	overflow: hidden;
	border-radius: var(--border-radius);

	// 强制限宽限高限比例
	// 必须要求设置 aspect-ratio
	max-width: min(400px, 100%);
	height: auto !important;

	// 居中；但是如果在 gallery 中，会被强制重置。
	margin: 1em auto;

	// 子元素容器查询。
	container-type: inline-size;

	.container {
		// 使重叠，并占满
		position: absolute;
		width: 100%;
		height: 100%;

		img, video {
			position: absolute;
			width: 100%;
			height: 100%;
			// 如果被外界容器强制限制了比例，可能出现拉升，修复它。
			// 正常情况下，有 aspect-ratio，将不影响。
			// TODO 可能与下面 video fill 有冲突？
			object-fit: cover;
		}

		img {
			transition: opacity 1s ease, transform 1s ease;
		}
		video {
			// 不管是否和图片大小有多不一致，始终保持一致
			// 这种场景应该很少，优先使用上面的 cover。
			// object-fit: fill;

			transition: transform 1s ease;
		}
	}

	&.zoom {
		.container {
			img, video {
				transform: scale(1.1);
			}
			img {
				opacity: 0;
			}
		}
		.icon {
			img {
				animation: spin 5s linear infinite;
			}
		}
	}

	.icon {
		display: inline-flex;
		align-items: center;
		padding: 2px;
		border-radius: var(--border-radius);
		position: relative;
		left: 10px;
		top: 10px;
		height: 22px;
		background-color: #f0ffffab;
		cursor: pointer;
		user-select: none;

		img {
			width: 22px;
			height: 22px;
		}
		span {
			padding: 3px;
			color: #606060;
			font-size: 80%;
		}
	}

	// 如果显示大小比较小，隐藏文字 LIVE。
	@container (max-width: 200px) {
		.icon span {
			display: none;
		}
	}

	.warning {
		padding: 4px 6px;
		margin: 10px;
		color: #9a6700;
		border-radius: var(--border-radius);
		position: absolute;
		left: 0;
		top: 40px;
		background-color: #f0ffffab;
		transition: opacity .5s linear;
		&.show {
			opacity: 1 !important;
			display: inline-block !important;
		}
	}
}
